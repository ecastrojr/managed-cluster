#!/bin/bash

set -eu

source /etc/profile.d/getup.sh

if [ -v KUBECONFIG ]; then
    debug Using KUBECONFIG=$KUBECONFIG
fi

if [ "$type" == standalone ]; then
    select type in kind oke; do
        break
    done
    set -a
    source $REPODIR/templates/$type/provider.env
    set +a
fi

info Retrieving kubeconfig for $name/$type

case $type in
    kind)
        exec kind export kubeconfig --name $name "$@"
    ;;

    oke)
        if ! [ -e "$OCI_CLI_CONFIG_FILE" ]; then
            read_config OCI_CLI_REGION "OCI Region:"
            oci setup config --region $OCI_CLI_REGION --config-file $OCI_CLI_CONFIG_FILE --cli-rc-file $OCI_CLI_RC_FILE

            oci setup repair-file-permissions --file $OCI_CLI_CONFIG_FILE
            oci setup repair-file-permissions --file $OCI_CLI_RC_FILE
            oci setup repair-file-permissions --file $OCI_CLI_KEY_FILE
        fi

        read_config OCI_COMPARTMENT_ID "Compartment ID:"
        read_config OCI_CLUSTER_NAME "Cluster Name:"
        OCI_CLUSTER_ID=$(oci ce cluster list --name $OCI_CLUSTER_NAME --compartment-id $OCI_COMPARTMENT_ID | jq -r '.data[0].id')
        oci ce cluster create-kubeconfig --cluster-id $OCI_CLUSTER_ID \
            --file $WORKDIR/.kube/config --region $OCI_CLI_REGION \
            --token-version 2.0.0
    ;;

    *) warn TODO: $0 $type
esac
