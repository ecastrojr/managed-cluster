#!/usr/bin/env bash

make
for cluster_type in $cluster_types; do
    CLUSTER_DIR=$PWD/clusters/$NAME/$cluster_type

    rm -rf $CLUSTER_DIR
    ./managed-cluster create --customer-name $CUSTOMER --cluster-name $NAME --cluster-type $cluster_type --cluster-sla none \
        --flux-git-repo ssh://git@github.com/eveilcorp/managed-cluster-evilcluster.git \
        --origin git@github.com:evilcorp/managed-cluster-evilcluster.git \
        --upstream git@github.com:evilcorp/managed-cluster.git

    terraform_params=( $(jq .${cluster_type}'.tfvars|keys[] as $k | "\($k)=\(.[$k])"' -c -r tests/test-data.json 2>/dev/null || true) )

    cat > $CLUSTER_DIR/test-cluster <<EOF
#!/bin/bash

tput rev
m="Starting tests for cluster $NAME type $cluster_type at branch $branch"
printf '%0.s#' \$(seq 1 \${#m})
echo -e "\\n\${m}"
printf '%0.s#' \$(seq 1 \${#m})
echo
tput sgr0

set -exu

cd /cluster
/usr/local/bin/terraform-setup -f -G -- ${terraform_params[@]@Q}
terraform init
terraform validate
#terraform plan -out=/tmp/terraform.tfplan
EOF
    chmod +x $CLUSTER_DIR/test-cluster
    run ./managed-cluster start $CLUSTER_DIR -- bash -c /cluster/test-cluster
done
